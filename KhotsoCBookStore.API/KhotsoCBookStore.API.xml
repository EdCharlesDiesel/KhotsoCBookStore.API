<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KhotsoCBookStore.API</name>
    </assembly>
    <members>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthorsAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthors">
            <summary>
            Get all authors resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested authors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthorById(System.Guid)">
            <summary>
            Get a single author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.CreateAuthor(KhotsoCBookStore.API.Dtos.AuthorForCreateDto)">
            <summary>
            Create an author resource.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the created author.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.UpdateAuthor(System.Guid,KhotsoCBookStore.API.Dtos.AuthorForUpdateDto)">
            <summary>
            Update author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.PartiallyUpdateAuthor(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.AuthorForUpdateDto})">
            <summary>
            Partial update author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.DeleteAuthor(System.Guid)">
            <summary>
            Delete a single author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooksAPIOptions">
            <summary>
            List of all the actions the API supports
            </summary>
            <returns>An IActionResult of actions allowed</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooks">
            <summary>
            Get all the books
            </summary>
            <returns>Returns books</returns>
            <response code="200">Returns the requested books</response>
            <response code="404">Returns no books found</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.Get(System.Guid)">
            <summary>
            Get the specific book with BookId
            </summary>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.CategoryDetails">
            <summary>
            Get the list of categories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.Post">
            <summary>
            Add a new book.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.Put">
            <summary>
            Update a specific book.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.Delete(System.Guid)">
            <summary>
            Delete a specific book.
            </summary>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.GetCustomersAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.GetCustomers">
            <summary>
            Get all customers resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested customers.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.GetCustomer(System.Guid)">
            <summary>
            Get a single customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.CreateCustomer(KhotsoCBookStore.API.Dtos.CustomerForCreateDto)">
            <summary>
            Create customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.UpdateCustomer(System.Guid,KhotsoCBookStore.API.Dtos.CustomerForUpdateDto)">
            <summary>
            Update customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.PartiallyUpdateCustomer(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.CustomerForUpdateDto})">
            <summary>
            Partial update customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.DeleteCustomer(System.Guid)">
            <summary>
            Delete a single customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.ValidateUserName(System.String)">
            <summary>
            Check customername availability. 
            </summary>
            <param name="customerName"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomersController.Register(KhotsoCBookStore.API.Dtos.CustomerForCreateDto)">
            <summary>
            Register a new customer.
            </summary>
            <param name="newCustomer"></param>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployeesAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployees">
            <summary>
            Get all employees resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employees.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployee(System.Guid)">
            <summary>
            Get a single employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.CreateEmployee(KhotsoCBookStore.API.Dtos.EmployeeForCreateDto)">
            <summary>
            Create employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.UpdateEmployee(System.Guid,KhotsoCBookStore.API.Dtos.EmployeeForUpdateDto)">
            <summary>
            Update employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.PartiallyUpdateEmployee(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.EmployeeForUpdateDto})">
            <summary>
            Partial update employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.DeleteEmployee(System.Guid)">
            <summary>
            Delete a single employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.OrderController.Get(System.Guid)">
            <summary>
            Get the all the orders for user
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.Get(System.Guid)">
            <summary>
            Get the list of books subscriptions
            </summary>
            <param name="userId"></param>
            <returns>List of book subscriptions</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.Post(System.Guid,System.Guid)">
            <summary>
            Add a new book subscription
            </summary>
            <param name="bookId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.Delete(System.Guid)">
            <summary>
            Delete a book subscription
            </summary>
            <param name="userId"></param>
            <returns>0 or 1</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetUserBookSubscription(System.Guid)">
            <summary>
            Get a list of user book subscriptions
            </summary>
            <param name="userId"></param>
            <returns>List of book subscription</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublishersAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublishers">
            <summary>
            Get all publishers resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested publishers.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublisher(System.Guid)">
            <summary>
            Get a single publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.CreatePublisher(KhotsoCBookStore.API.Dtos.PublisherForCreateDto)">
            <summary>
            Create publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.UpdatePublisher(System.Guid,KhotsoCBookStore.API.Dtos.PublisherForUpdateDto)">
            <summary>
            Update publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.PartiallyUpdatePublisher(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.PublisherForUpdateDto})">
            <summary>
            Partial update publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.DeletePublisher(System.Guid)">
            <summary>
            Delete a single publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.Get(System.Guid,System.Guid)">
            <summary>
            Get the shopping cart for user.
            </summary>
            <param name="oldUserId"></param>
            <param name="newUserId"></param>
            <returns>The count of items in shopping cart</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.Get(System.Guid)">
            <summary>
            Get the list of items in the shopping cart
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.Post(System.Guid,System.Guid)">
            <summary>
            Add a single item into the shopping cart. If the item already exists, increase the quantity by one
            </summary>
            <param name="userId"></param>
            <param name="bookId"></param>
            <returns>Count of items in the shopping cart</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.Put(System.Guid,System.Guid)">
            <summary>
            Update item in shopping cart
            </summary>
            <param name="userId"></param>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.Delete(System.Guid,System.Guid)">
            <summary>
            Delete a single item from the cart. 
            </summary>
            <param name="userId"></param>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.Delete(System.Guid)">
            <summary>
            Delete user cart.
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.GetWishListById(System.Guid)">
            <summary>
            Get the list of items in the Wishlist
            </summary>
            <param name="userId"></param>
            <returns>All the items in the Wishlist</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.Post(System.Guid,System.Guid)">
            <summary>
            Toggle the items in Wishlist. If item doesn't exists, it will be added to the Wishlist else it will be removed.
            </summary>
            <param name="userId"></param>
            <param name="bookId"></param>
            <returns>All the items in the Wishlist</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.Delete(System.Guid)">
             <summary>
             Clear the Wishlist
             </summary>
             <param name="userId"></param>
             <returns></returns>
            [Authorize]
        </member>
        <member name="M:KhotsoCBookStore.API.Repositories.CustomerRepository.RegisterCustomer(KhotsoCBookStore.API.Dtos.CustomerForCreateDto)">
            <summary>
            ToDo: Work On Authrntication and Authorization.
            </summary>
        </member>
    </members>
</doc>
