<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KhotsoCBookStore.API</name>
    </assembly>
    <members>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthorsAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthors">
            <summary>
            Get all authors resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested authors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthorById(System.Guid)">
            <summary>
            Get a single author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.CreateAuthor(KhotsoCBookStore.API.Dtos.AuthorForCreateDto)">
            <summary>
            Create an author resource.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the created author.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.UpdateAuthor(System.Guid,KhotsoCBookStore.API.Dtos.AuthorForUpdateDto)">
            <summary>
            Update author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.PartiallyUpdateAuthor(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.AuthorForUpdateDto})">
            <summary>
            Partial update author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.DeleteAuthor(System.Guid)">
            <summary>
            Delete a single author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBookAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooks">
            <summary>
            Get all the book
            </summary>
            <returns>Returns book</returns>
            <response code="200">Returns the requested book</response>
            <response code="404">Returns no book found</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBook(System.Guid)">
            <summary>
            Get a single book resource by bookId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.CreateBook(KhotsoCBookStore.API.Dtos.BookForCreateDto)">
            <summary>
            Create an book resource.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the created book.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.UpdateBook(System.Guid,KhotsoCBookStore.API.Dtos.BookForUpdateDto)">
            <summary>
            Update book resource by bookId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.PartiallyUpdateBook(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.BookForUpdateDto})">
            <summary>
            Partial update book resource by bookId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.DeleteBook(System.Guid)">
            <summary>
            Delete a single book resource by bookId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.CategoryDetails">
            <summary>
            Get the list of categories.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooksAvailableInCart">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooksInBookSubscription">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooksAvailableInPromotion">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooksAvailableInWishList">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.GetBookAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.CreateOrder(System.Guid,KhotsoCBookStore.API.Dtos.OrderForCreateDto)">
            <summary>
            Add customer checkout item(s)
            </summary>
            <param name="customerId"></param>
            <param name="checkedOutItems"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.GetCartItemCountForCustomer(System.Guid)">
            <summary>
            Get the count of item in the shopping cart
            </summary>
            <param name="customerId"></param>
            <returns>The count of items in shopping cart</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.GetCustomersAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.GetCustomers">
            <summary>
            Get all customers resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested customers.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.GetCustomer(System.Guid)">
            <summary>
            Get a single customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.CreateCustomer(KhotsoCBookStore.API.Dtos.CustomerForCreateDto)">
            <summary>
            Create customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.UpdateCustomer(System.Guid,KhotsoCBookStore.API.Dtos.CustomerForUpdateDto)">
            <summary>
            Update customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.PartiallyUpdateCustomer(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.CustomerForUpdateDto})">
            <summary>
            Partial update customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.DeleteCustomer(System.Guid)">
            <summary>
            Delete a single customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployeesAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployees">
            <summary>
            Get all employees resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employees.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployee(System.Guid)">
            <summary>
            Get a single employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.CreateEmployee(KhotsoCBookStore.API.Dtos.EmployeeForCreateDto)">
            <summary>
            Create employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.UpdateEmployee(System.Guid,KhotsoCBookStore.API.Dtos.EmployeeForUpdateDto)">
            <summary>
            Update employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.PartiallyUpdateEmployee(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.EmployeeForUpdateDto})">
            <summary>
            Partial update employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.DeleteEmployee(System.Guid)">
            <summary>
            Delete a single employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.OrderController.GetOrders(System.Guid)">
            <summary>
            Get the all the orders for user
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetProductSubscriptions(System.Guid)">
            <summary>
            Get the list of books subscriptions
            </summary>
            <param name="customerId"></param>
            <returns>List of book subscriptions</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.CreateSubscription(System.Guid,System.Guid)">
            <summary>
            Add a new book subscription
            </summary>
            <param name="bookId"></param>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.ClearProductSubscription(System.Guid)">
            <summary>
            Delete a book subscription
            </summary>
            <param name="customerId"></param>
            <returns>NoContent</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetUserBookSubscription(System.Guid)">
            <summary>
            Get a list of user book subscriptions
            </summary>
            <param name="customerId"></param>
            <returns>List of book subscription</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionsController.GetCustomerPromotions(System.Guid)">
            <summary>
            Get the list of items in the Promotion
            </summary>
            <param name="customerId"></param>
            <returns>All the items in the Promotion</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionsController.CreatePromotion(System.Guid,System.Guid)">
            <summary>
            Toggle the items in Promotion. If item doesn't exists, 
            it will be added to the Promotion else it will be removed.
            </summary>
            <param name="customerId"></param>
            <param name="bookId"></param>
            <returns>All the items in the Promotion</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionsController.Delete(System.Guid)">
             <summary>
             Clear the Promotion
             </summary>
             <param name="customerId"></param>
             <returns></returns>
            [Authorize]
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublishersAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublishers">
            <summary>
            Get all publishers resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested publishers.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublisher(System.Guid)">
            <summary>
            Get a single publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.CreatePublisher(KhotsoCBookStore.API.Dtos.PublisherForCreateDto)">
            <summary>
            Create publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.UpdatePublisher(System.Guid,KhotsoCBookStore.API.Dtos.PublisherForUpdateDto)">
            <summary>
            Update publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.PartiallyUpdatePublisher(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.PublisherForUpdateDto})">
            <summary>
            Partial update publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.DeletePublisher(System.Guid)">
            <summary>
            Delete a single publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.GetShoppingCartForCustomer(System.Guid,System.Guid)">
            <summary>
            Get the shopping cart for user.
            </summary>
            <param name="oldUserId"></param>
            <param name="newUserId"></param>
            <returns>The count of items in shopping cart</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.GetItemsInCart(System.Guid)">
            <summary>
            Get the list of items in the shopping cart
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.AddItemToCart(System.Guid,System.Guid)">
            <summary>
            Add a single item into the shopping cart. If the item already exists, 
            increase the quantity by one
            </summary>
            <param name="customerId"></param>
            <param name="bookId"></param>
            <returns>Count of items in the shopping cart</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.UpdateCart(System.Guid,System.Guid)">
            <summary>
            Update item in shopping cart
            </summary>
            <param name="customerId"></param>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.RemoveItemFromCart(System.Guid,System.Guid)">
            <summary>
            Delete a single item from the cart. 
            </summary>
            <param name="customerId"></param>
            <param name="bookId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ShoppingCartController.ClearCart(System.Guid)">
            <summary>
            Delete user cart.
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.GetWishListsAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.GetWishListsById(System.Guid)">
            <summary>
            Get the list of items in the Wishlist
            </summary>
            <param name="customerId"></param>
            <returns>All the items in the Wishlist</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.ToggleWishList(System.Guid,System.Guid)">
            <summary>
            Toggle the items in Wishlist. If item doesn't exists, it will be added to the Wishlist else it will be removed.
            </summary>
            <param name="customerId"></param>
            <param name="bookId"></param>
            <returns>All the items in the Wishlist</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.ClearWishList(System.Guid)">
            <summary>
            Clear the Wishlist
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Repositories.CustomerRepository.RegisterCustomer(KhotsoCBookStore.API.Dtos.CustomerForCreateDto)">
            <summary>
            ToDo: Work On Authrntication and Authorization.
            </summary>
        </member>
    </members>
</doc>
