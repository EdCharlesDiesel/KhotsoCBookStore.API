<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KhotsoCBookStore.API</name>
    </assembly>
    <members>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthorsAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.CreateAuthor(KhotsoCBookStore.API.Dtos.AuthorForCreateDto)">
            <summary>
            Create an author resource.
            </summary>
            <returns>Author resource created</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="201">Returns the created author.</response>
            <response code="400">Returns an error if the author is in the wrong format.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthors">
            <summary>
            Get all authors resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested authors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.GetAuthorById(System.Guid)">
            <summary>
            Get a single author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.UpdateAuthor(System.Guid,KhotsoCBookStore.API.Dtos.AuthorForUpdateDto)">
            <summary>
            Update author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.PartiallyUpdateAuthor(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.AuthorForUpdateDto})">
            <summary>
            Partial update author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns no content.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.AuthorController.DeleteAuthor(System.Guid)">
            <summary>
            Delete a single author resource by authorId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBookAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.CreateBook(KhotsoCBookStore.API.Dtos.BookForCreateDto)">
            <summary>
            Create a book resource.
            </summary>
            <returns>Book resource created</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="201">Returns the created book.</response>        
            <response code="400">Returns an error if the book is in the wrong format.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBooks">
            <summary>
            Get all book resources.
            </summary>
            <returns>Returns book</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.GetBook(System.Guid)">
            <summary>
            Get a single book resource by bookId.
            </summary>
            <returns>A single book</returns>
            <response code="200">Returns requested book resource by id.</response>
            <response code="404">Returns error if the requested book resource is not found.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.UpdateBook(System.Guid,KhotsoCBookStore.API.Dtos.BookForUpdateDto)">
            <summary>
            Update a book resource by bookId.
            </summary>
            <returns>Updated book resource</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.PartiallyUpdateBook(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.BookForUpdateDto})">
            <summary>
            Partially update book resource by bookId.
            </summary>
            <returns>No content if book resource was updated successfully</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.BookController.DeleteBook(System.Guid)">
            <summary>
            Delete a single book resource by bookId.
            </summary>
            <returns>No content</returns>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CartController.GetAuthorsAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CartController.GetBooksAvailableInCart">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.GetCategoryAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.CreateCategory(KhotsoCBookStore.API.Dtos.CategoryForCreateDto)">
            <summary>
            Create a category resource.
            </summary>
            <returns>Category resource created</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="201">Returns the created category.</response>        
            <response code="400">Returns an error if the category is in the wrong format.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.GetCategorys">
            <summary>
            Get all category resources.
            </summary>
            <returns>Returns category</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.GetCategory(System.Guid)">
            <summary>
            Get a single category resource by categoryId.
            </summary>
            <returns>A single category</returns>
            <response code="200">Returns requested category resource by id.</response>
            <response code="404">Returns error if the requested category resource is not found.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.UpdateCategory(System.Guid,KhotsoCBookStore.API.Dtos.CategoryForUpdateDto)">
            <summary>
            Update a category resource by categoryId.
            </summary>
            <returns>Updated category resource</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.PartiallyUpdateCategory(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.CategoryForUpdateDto})">
            <summary>
            Partially update category resource by categoryId.
            </summary>
            <returns>No content if category resource was updated successfully</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CategoryController.DeleteCategory(System.Guid)">
            <summary>
            Delete a single category resource by categoryId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.GetBookAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.CreateOrder(System.Guid,KhotsoCBookStore.API.Dtos.OrderForCreateDto)">
            <summary>
            Add customer checkout item(s)
            </summary>
            <param name="customerId"></param>
            <param name="checkedOutItems"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.GetOrder(System.Guid)">
            <summary>
            Get a single order for customer
            </summary>
            <param name="customerId"></param>
            <returns>Single Order</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CheckOutController.GetCartItemCountForCustomer(System.Guid)">
            <summary>
            Get the count of item in the shopping cart
            </summary>
            <param name="customerId"></param>
            <returns>The count of items in shopping cart</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.GetCustomersAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.GetCustomers">
            <summary>
            Get all customers resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested customers.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.GetCustomer(System.Guid)">
            <summary>
            Get a single customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.CreateCustomer(KhotsoCBookStore.API.Dtos.CustomerForCreateDto)">
            <summary>
            Create customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.UpdateCustomer(System.Guid,KhotsoCBookStore.API.Dtos.CustomerForUpdateDto)">
            <summary>
            Update customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.PartiallyUpdateCustomer(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.CustomerForUpdateDto})">
            <summary>
            Partial update customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.CustomerController.DeleteCustomer(System.Guid)">
            <summary>
            Delete a single customer resource by customerId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployeesAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployees">
            <summary>
            Get all employees resources.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employees.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.GetEmployee(System.Guid)">
            <summary>
            Get a single employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.CreateEmployee(KhotsoCBookStore.API.Dtos.EmployeeForCreateDto)">
            <summary>
            Create employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.UpdateEmployee(System.Guid,KhotsoCBookStore.API.Dtos.EmployeeForUpdateDto)">
            <summary>
            Update employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.PartiallyUpdateEmployee(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.EmployeeForUpdateDto})">
            <summary>
            Partial update employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.EmployeeController.DeleteEmployee(System.Guid)">
            <summary>
            Delete a single employee resource by employeeId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.OrderController.GetOrderAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.OrderController.GetOrders(System.Guid)">
            <summary>
            Get the all the orders for user
            </summary>
            <param name="customerId"></param>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetProductSubscriptionAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetProductSubscriptions(System.Guid)">
            <summary>
            Get the list of product subscriptions
            </summary>
            <returns>List of book subscriptions</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetProductSubscriptionById(System.Guid)">
            <summary>
            Get the single book subscription by Id
            </summary>
            <returns>List of book subscriptions</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.CreateProductSubscriptionAsync(System.Guid,System.Guid)">
            <summary>
            Add a new book subscription
            </summary>
            <param name="bookId"></param>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.ClearProductSubscription(System.Guid)">
            <summary>
            Delete a product subscription
            </summary>
            <param name="customerId"></param>
            <returns>NoContent</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.ProductSubscriptionController.GetBooksInBookSubscription">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.GetPromotionAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.CreatePromotion(KhotsoCBookStore.API.Dtos.PromotionForCreateDto)">
            <summary>
            Create a promotion resource.
            </summary>
            <returns>Promotion resource created</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="201">Returns the created promotion.</response>        
            <response code="400">Returns an error if the promotion is in the wrong format.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.GetPromotions">
            <summary>
            Get all promotion resources.
            </summary>
            <returns>Returns promotion</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.GetPromotion(System.Guid)">
            <summary>
            Get a single promotion resource by promotionId.
            </summary>
            <returns>A single promotion</returns>
            <response code="200">Returns requested promotion resource by id.</response>
            <response code="404">Returns error if the requested promotion resource is not found.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.UpdatePromotion(System.Guid,KhotsoCBookStore.API.Dtos.PromotionForUpdateDto)">
            <summary>
            Update a promotion resource by promotionId.
            </summary>
            <returns>Updated promotion resource</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.PartiallyUpdatePromotion(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.PromotionForUpdateDto})">
            <summary>
            Partially update promotion resource by promotionId.
            </summary>
            <returns>No content if promotion resource was updated successfully</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.DeletePromotion(System.Guid)">
            <summary>
            Delete a single promotion resource by promotionId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PromotionController.GetBooksAvailableInPromotion">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublishersAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.CreatePublisher(KhotsoCBookStore.API.Dtos.PublisherForCreateDto)">
            <summary>
            Create a publisher resource.
            </summary>
            <returns>Publisher resource created</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="201">Returns the created publisher.</response>        
            <response code="400">Returns an error if the publisher is in the wrong format.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublishers">
            <summary>
            Get all publisher resources.
            </summary>
            <returns>Returns publisher</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.GetPublisher(System.Guid)">
            <summary>
            Get a single publisher resource by publisherId.
            </summary>
            <returns>A single publisher</returns>
            <response code="200">Returns requested publisher resource by id.</response>
            <response code="404">Returns error if the requested publisher resource is not found.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.UpdatePublisher(System.Guid,KhotsoCBookStore.API.Dtos.PublisherForUpdateDto)">
            <summary>
            Update a publisher resource by publisherId.
            </summary>
            <returns>Updated publisher resource</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.PartiallyUpdatePublisher(System.Guid,Microsoft.AspNetCore.JsonPatch.JsonPatchDocument{KhotsoCBookStore.API.Dtos.PublisherForUpdateDto})">
            <summary>
            Partially update publisher resource by publisherId.
            </summary>
            <returns>No content if publisher resource was updated successfully</returns>
            <response code="200">Returns Ok for successfull request without errors.</response>
            <response code="204">Returns successfull if resource was updated successfully.</response>
            <response code="404">Returns not found if the requested resource is not found.</response>
            <response code="400">Returns bad request if the resource is not supported.</response>
            <response code="405">Returns method not allowed.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.PublisherController.DeletePublisher(System.Guid)">
            <summary>
            Delete a single publisher resource by publisherId.
            </summary>
            <returns>An IActionResult</returns>
            <response code="200">Returns the requested employes.</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.GetWishListsAPIOptions">
            <summary>
            Get supported resource actions
            </summary>
            <returns>API actions allowed</returns>
            <returns>An IActionResult</returns>
            <response code="200">Returns the list of all requests allowed on this end-point</response>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.GetWishListsById(System.Guid)">
            <summary>
            Get the list of items in the Wishlist
            </summary>
            <param name="customerId"></param>
            <returns>All the items in the Wishlist</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.ToggleWishList(System.Guid,System.Guid)">
            <summary>
            Toggle the items in Wishlist. If item doesn't exists, it will be added to the Wishlist else it will be removed.
            </summary>
            <param name="customerId"></param>
            <param name="bookId"></param>
            <returns>All the items in the Wishlist</returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.ClearWishList(System.Guid)">
            <summary>
            Clear the Wishlist
            </summary>
            <param name="customerId"></param>
            <returns></returns>
        </member>
        <member name="M:KhotsoCBookStore.API.Controllers.WishListController.GetBooksAvailableInWishList">
            <summary>
            Get the list of orders.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
